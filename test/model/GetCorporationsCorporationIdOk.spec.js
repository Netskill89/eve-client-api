/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.12
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.28
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveApi);
  }
}(this, function(expect, EveApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetCorporationsCorporationIdOk', function() {
      beforeEach(function() {
        instance = new EveApi.GetCorporationsCorporationIdOk();
      });

      it('should create an instance of GetCorporationsCorporationIdOk', function() {
        // TODO: update the code to test GetCorporationsCorporationIdOk
        expect(instance).to.be.a(EveApi.GetCorporationsCorporationIdOk);
      });

      it('should have the property alliance_id (base name: "alliance_id")', function() {
        // TODO: update the code to test the property alliance_id
        expect(instance).to.have.property('alliance_id');
        // expect(instance.alliance_id).to.be(expectedValueLiteral);
      });

      it('should have the property ceo_id (base name: "ceo_id")', function() {
        // TODO: update the code to test the property ceo_id
        expect(instance).to.have.property('ceo_id');
        // expect(instance.ceo_id).to.be(expectedValueLiteral);
      });

      it('should have the property creator_id (base name: "creator_id")', function() {
        // TODO: update the code to test the property creator_id
        expect(instance).to.have.property('creator_id');
        // expect(instance.creator_id).to.be(expectedValueLiteral);
      });

      it('should have the property date_founded (base name: "date_founded")', function() {
        // TODO: update the code to test the property date_founded
        expect(instance).to.have.property('date_founded');
        // expect(instance.date_founded).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property faction_id (base name: "faction_id")', function() {
        // TODO: update the code to test the property faction_id
        expect(instance).to.have.property('faction_id');
        // expect(instance.faction_id).to.be(expectedValueLiteral);
      });

      it('should have the property home_station_id (base name: "home_station_id")', function() {
        // TODO: update the code to test the property home_station_id
        expect(instance).to.have.property('home_station_id');
        // expect(instance.home_station_id).to.be(expectedValueLiteral);
      });

      it('should have the property member_count (base name: "member_count")', function() {
        // TODO: update the code to test the property member_count
        expect(instance).to.have.property('member_count');
        // expect(instance.member_count).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property shares (base name: "shares")', function() {
        // TODO: update the code to test the property shares
        expect(instance).to.have.property('shares');
        // expect(instance.shares).to.be(expectedValueLiteral);
      });

      it('should have the property tax_rate (base name: "tax_rate")', function() {
        // TODO: update the code to test the property tax_rate
        expect(instance).to.have.property('tax_rate');
        // expect(instance.tax_rate).to.be(expectedValueLiteral);
      });

      it('should have the property ticker (base name: "ticker")', function() {
        // TODO: update the code to test the property ticker
        expect(instance).to.have.property('ticker');
        // expect(instance.ticker).to.be(expectedValueLiteral);
      });

      it('should have the property url (base name: "url")', function() {
        // TODO: update the code to test the property url
        expect(instance).to.have.property('url');
        // expect(instance.url).to.be(expectedValueLiteral);
      });

      it('should have the property war_eligible (base name: "war_eligible")', function() {
        // TODO: update the code to test the property war_eligible
        expect(instance).to.have.property('war_eligible');
        // expect(instance.war_eligible).to.be(expectedValueLiteral);
      });

    });
  });

}));
