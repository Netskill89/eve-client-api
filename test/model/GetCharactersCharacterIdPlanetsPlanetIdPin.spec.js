/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.12
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.28
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveApi);
  }
}(this, function(expect, EveApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetCharactersCharacterIdPlanetsPlanetIdPin', function() {
      beforeEach(function() {
        instance = new EveApi.GetCharactersCharacterIdPlanetsPlanetIdPin();
      });

      it('should create an instance of GetCharactersCharacterIdPlanetsPlanetIdPin', function() {
        // TODO: update the code to test GetCharactersCharacterIdPlanetsPlanetIdPin
        expect(instance).to.be.a(EveApi.GetCharactersCharacterIdPlanetsPlanetIdPin);
      });

      it('should have the property contents (base name: "contents")', function() {
        // TODO: update the code to test the property contents
        expect(instance).to.have.property('contents');
        // expect(instance.contents).to.be(expectedValueLiteral);
      });

      it('should have the property expiry_time (base name: "expiry_time")', function() {
        // TODO: update the code to test the property expiry_time
        expect(instance).to.have.property('expiry_time');
        // expect(instance.expiry_time).to.be(expectedValueLiteral);
      });

      it('should have the property extractor_details (base name: "extractor_details")', function() {
        // TODO: update the code to test the property extractor_details
        expect(instance).to.have.property('extractor_details');
        // expect(instance.extractor_details).to.be(expectedValueLiteral);
      });

      it('should have the property factory_details (base name: "factory_details")', function() {
        // TODO: update the code to test the property factory_details
        expect(instance).to.have.property('factory_details');
        // expect(instance.factory_details).to.be(expectedValueLiteral);
      });

      it('should have the property install_time (base name: "install_time")', function() {
        // TODO: update the code to test the property install_time
        expect(instance).to.have.property('install_time');
        // expect(instance.install_time).to.be(expectedValueLiteral);
      });

      it('should have the property last_cycle_start (base name: "last_cycle_start")', function() {
        // TODO: update the code to test the property last_cycle_start
        expect(instance).to.have.property('last_cycle_start');
        // expect(instance.last_cycle_start).to.be(expectedValueLiteral);
      });

      it('should have the property latitude (base name: "latitude")', function() {
        // TODO: update the code to test the property latitude
        expect(instance).to.have.property('latitude');
        // expect(instance.latitude).to.be(expectedValueLiteral);
      });

      it('should have the property longitude (base name: "longitude")', function() {
        // TODO: update the code to test the property longitude
        expect(instance).to.have.property('longitude');
        // expect(instance.longitude).to.be(expectedValueLiteral);
      });

      it('should have the property pin_id (base name: "pin_id")', function() {
        // TODO: update the code to test the property pin_id
        expect(instance).to.have.property('pin_id');
        // expect(instance.pin_id).to.be(expectedValueLiteral);
      });

      it('should have the property schematic_id (base name: "schematic_id")', function() {
        // TODO: update the code to test the property schematic_id
        expect(instance).to.have.property('schematic_id');
        // expect(instance.schematic_id).to.be(expectedValueLiteral);
      });

      it('should have the property type_id (base name: "type_id")', function() {
        // TODO: update the code to test the property type_id
        expect(instance).to.have.property('type_id');
        // expect(instance.type_id).to.be(expectedValueLiteral);
      });

    });
  });

}));
