/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.12
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.28
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveApi);
  }
}(this, function(expect, EveApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetCorporationsCorporationIdRoles200Ok', function() {
      beforeEach(function() {
        instance = new EveApi.GetCorporationsCorporationIdRoles200Ok();
      });

      it('should create an instance of GetCorporationsCorporationIdRoles200Ok', function() {
        // TODO: update the code to test GetCorporationsCorporationIdRoles200Ok
        expect(instance).to.be.a(EveApi.GetCorporationsCorporationIdRoles200Ok);
      });

      it('should have the property character_id (base name: "character_id")', function() {
        // TODO: update the code to test the property character_id
        expect(instance).to.have.property('character_id');
        // expect(instance.character_id).to.be(expectedValueLiteral);
      });

      it('should have the property grantable_roles (base name: "grantable_roles")', function() {
        // TODO: update the code to test the property grantable_roles
        expect(instance).to.have.property('grantable_roles');
        // expect(instance.grantable_roles).to.be(expectedValueLiteral);
      });

      it('should have the property grantable_roles_at_base (base name: "grantable_roles_at_base")', function() {
        // TODO: update the code to test the property grantable_roles_at_base
        expect(instance).to.have.property('grantable_roles_at_base');
        // expect(instance.grantable_roles_at_base).to.be(expectedValueLiteral);
      });

      it('should have the property grantable_roles_at_hq (base name: "grantable_roles_at_hq")', function() {
        // TODO: update the code to test the property grantable_roles_at_hq
        expect(instance).to.have.property('grantable_roles_at_hq');
        // expect(instance.grantable_roles_at_hq).to.be(expectedValueLiteral);
      });

      it('should have the property grantable_roles_at_other (base name: "grantable_roles_at_other")', function() {
        // TODO: update the code to test the property grantable_roles_at_other
        expect(instance).to.have.property('grantable_roles_at_other');
        // expect(instance.grantable_roles_at_other).to.be(expectedValueLiteral);
      });

      it('should have the property roles (base name: "roles")', function() {
        // TODO: update the code to test the property roles
        expect(instance).to.have.property('roles');
        // expect(instance.roles).to.be(expectedValueLiteral);
      });

      it('should have the property roles_at_base (base name: "roles_at_base")', function() {
        // TODO: update the code to test the property roles_at_base
        expect(instance).to.have.property('roles_at_base');
        // expect(instance.roles_at_base).to.be(expectedValueLiteral);
      });

      it('should have the property roles_at_hq (base name: "roles_at_hq")', function() {
        // TODO: update the code to test the property roles_at_hq
        expect(instance).to.have.property('roles_at_hq');
        // expect(instance.roles_at_hq).to.be(expectedValueLiteral);
      });

      it('should have the property roles_at_other (base name: "roles_at_other")', function() {
        // TODO: update the code to test the property roles_at_other
        expect(instance).to.have.property('roles_at_other');
        // expect(instance.roles_at_other).to.be(expectedValueLiteral);
      });

    });
  });

}));
