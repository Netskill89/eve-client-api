/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.12
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.28
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveApi);
  }
}(this, function(expect, EveApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetUniverseBloodlines200Ok', function() {
      beforeEach(function() {
        instance = new EveApi.GetUniverseBloodlines200Ok();
      });

      it('should create an instance of GetUniverseBloodlines200Ok', function() {
        // TODO: update the code to test GetUniverseBloodlines200Ok
        expect(instance).to.be.a(EveApi.GetUniverseBloodlines200Ok);
      });

      it('should have the property bloodline_id (base name: "bloodline_id")', function() {
        // TODO: update the code to test the property bloodline_id
        expect(instance).to.have.property('bloodline_id');
        // expect(instance.bloodline_id).to.be(expectedValueLiteral);
      });

      it('should have the property charisma (base name: "charisma")', function() {
        // TODO: update the code to test the property charisma
        expect(instance).to.have.property('charisma');
        // expect(instance.charisma).to.be(expectedValueLiteral);
      });

      it('should have the property corporation_id (base name: "corporation_id")', function() {
        // TODO: update the code to test the property corporation_id
        expect(instance).to.have.property('corporation_id');
        // expect(instance.corporation_id).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property intelligence (base name: "intelligence")', function() {
        // TODO: update the code to test the property intelligence
        expect(instance).to.have.property('intelligence');
        // expect(instance.intelligence).to.be(expectedValueLiteral);
      });

      it('should have the property memory (base name: "memory")', function() {
        // TODO: update the code to test the property memory
        expect(instance).to.have.property('memory');
        // expect(instance.memory).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property perception (base name: "perception")', function() {
        // TODO: update the code to test the property perception
        expect(instance).to.have.property('perception');
        // expect(instance.perception).to.be(expectedValueLiteral);
      });

      it('should have the property race_id (base name: "race_id")', function() {
        // TODO: update the code to test the property race_id
        expect(instance).to.have.property('race_id');
        // expect(instance.race_id).to.be(expectedValueLiteral);
      });

      it('should have the property ship_type_id (base name: "ship_type_id")', function() {
        // TODO: update the code to test the property ship_type_id
        expect(instance).to.have.property('ship_type_id');
        // expect(instance.ship_type_id).to.be(expectedValueLiteral);
      });

      it('should have the property willpower (base name: "willpower")', function() {
        // TODO: update the code to test the property willpower
        expect(instance).to.have.property('willpower');
        // expect(instance.willpower).to.be(expectedValueLiteral);
      });

    });
  });

}));
