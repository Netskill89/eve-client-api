/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.12
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.28
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveApi);
  }
}(this, function(expect, EveApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetCharactersCharacterIdPlanets200Ok', function() {
      beforeEach(function() {
        instance = new EveApi.GetCharactersCharacterIdPlanets200Ok();
      });

      it('should create an instance of GetCharactersCharacterIdPlanets200Ok', function() {
        // TODO: update the code to test GetCharactersCharacterIdPlanets200Ok
        expect(instance).to.be.a(EveApi.GetCharactersCharacterIdPlanets200Ok);
      });

      it('should have the property last_update (base name: "last_update")', function() {
        // TODO: update the code to test the property last_update
        expect(instance).to.have.property('last_update');
        // expect(instance.last_update).to.be(expectedValueLiteral);
      });

      it('should have the property num_pins (base name: "num_pins")', function() {
        // TODO: update the code to test the property num_pins
        expect(instance).to.have.property('num_pins');
        // expect(instance.num_pins).to.be(expectedValueLiteral);
      });

      it('should have the property owner_id (base name: "owner_id")', function() {
        // TODO: update the code to test the property owner_id
        expect(instance).to.have.property('owner_id');
        // expect(instance.owner_id).to.be(expectedValueLiteral);
      });

      it('should have the property planet_id (base name: "planet_id")', function() {
        // TODO: update the code to test the property planet_id
        expect(instance).to.have.property('planet_id');
        // expect(instance.planet_id).to.be(expectedValueLiteral);
      });

      it('should have the property planet_type (base name: "planet_type")', function() {
        // TODO: update the code to test the property planet_type
        expect(instance).to.have.property('planet_type');
        // expect(instance.planet_type).to.be(expectedValueLiteral);
      });

      it('should have the property solar_system_id (base name: "solar_system_id")', function() {
        // TODO: update the code to test the property solar_system_id
        expect(instance).to.have.property('solar_system_id');
        // expect(instance.solar_system_id).to.be(expectedValueLiteral);
      });

      it('should have the property upgrade_level (base name: "upgrade_level")', function() {
        // TODO: update the code to test the property upgrade_level
        expect(instance).to.have.property('upgrade_level');
        // expect(instance.upgrade_level).to.be(expectedValueLiteral);
      });

    });
  });

}));
