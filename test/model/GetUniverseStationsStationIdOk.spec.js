/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.12
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.28
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveApi);
  }
}(this, function(expect, EveApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetUniverseStationsStationIdOk', function() {
      beforeEach(function() {
        instance = new EveApi.GetUniverseStationsStationIdOk();
      });

      it('should create an instance of GetUniverseStationsStationIdOk', function() {
        // TODO: update the code to test GetUniverseStationsStationIdOk
        expect(instance).to.be.a(EveApi.GetUniverseStationsStationIdOk);
      });

      it('should have the property max_dockable_ship_volume (base name: "max_dockable_ship_volume")', function() {
        // TODO: update the code to test the property max_dockable_ship_volume
        expect(instance).to.have.property('max_dockable_ship_volume');
        // expect(instance.max_dockable_ship_volume).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property office_rental_cost (base name: "office_rental_cost")', function() {
        // TODO: update the code to test the property office_rental_cost
        expect(instance).to.have.property('office_rental_cost');
        // expect(instance.office_rental_cost).to.be(expectedValueLiteral);
      });

      it('should have the property owner (base name: "owner")', function() {
        // TODO: update the code to test the property owner
        expect(instance).to.have.property('owner');
        // expect(instance.owner).to.be(expectedValueLiteral);
      });

      it('should have the property position (base name: "position")', function() {
        // TODO: update the code to test the property position
        expect(instance).to.have.property('position');
        // expect(instance.position).to.be(expectedValueLiteral);
      });

      it('should have the property race_id (base name: "race_id")', function() {
        // TODO: update the code to test the property race_id
        expect(instance).to.have.property('race_id');
        // expect(instance.race_id).to.be(expectedValueLiteral);
      });

      it('should have the property reprocessing_efficiency (base name: "reprocessing_efficiency")', function() {
        // TODO: update the code to test the property reprocessing_efficiency
        expect(instance).to.have.property('reprocessing_efficiency');
        // expect(instance.reprocessing_efficiency).to.be(expectedValueLiteral);
      });

      it('should have the property reprocessing_stations_take (base name: "reprocessing_stations_take")', function() {
        // TODO: update the code to test the property reprocessing_stations_take
        expect(instance).to.have.property('reprocessing_stations_take');
        // expect(instance.reprocessing_stations_take).to.be(expectedValueLiteral);
      });

      it('should have the property services (base name: "services")', function() {
        // TODO: update the code to test the property services
        expect(instance).to.have.property('services');
        // expect(instance.services).to.be(expectedValueLiteral);
      });

      it('should have the property station_id (base name: "station_id")', function() {
        // TODO: update the code to test the property station_id
        expect(instance).to.have.property('station_id');
        // expect(instance.station_id).to.be(expectedValueLiteral);
      });

      it('should have the property system_id (base name: "system_id")', function() {
        // TODO: update the code to test the property system_id
        expect(instance).to.have.property('system_id');
        // expect(instance.system_id).to.be(expectedValueLiteral);
      });

      it('should have the property type_id (base name: "type_id")', function() {
        // TODO: update the code to test the property type_id
        expect(instance).to.have.property('type_id');
        // expect(instance.type_id).to.be(expectedValueLiteral);
      });

    });
  });

}));
