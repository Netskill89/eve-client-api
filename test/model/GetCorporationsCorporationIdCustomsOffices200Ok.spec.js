/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.12
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.28
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveApi);
  }
}(this, function(expect, EveApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetCorporationsCorporationIdCustomsOffices200Ok', function() {
      beforeEach(function() {
        instance = new EveApi.GetCorporationsCorporationIdCustomsOffices200Ok();
      });

      it('should create an instance of GetCorporationsCorporationIdCustomsOffices200Ok', function() {
        // TODO: update the code to test GetCorporationsCorporationIdCustomsOffices200Ok
        expect(instance).to.be.a(EveApi.GetCorporationsCorporationIdCustomsOffices200Ok);
      });

      it('should have the property alliance_tax_rate (base name: "alliance_tax_rate")', function() {
        // TODO: update the code to test the property alliance_tax_rate
        expect(instance).to.have.property('alliance_tax_rate');
        // expect(instance.alliance_tax_rate).to.be(expectedValueLiteral);
      });

      it('should have the property allow_access_with_standings (base name: "allow_access_with_standings")', function() {
        // TODO: update the code to test the property allow_access_with_standings
        expect(instance).to.have.property('allow_access_with_standings');
        // expect(instance.allow_access_with_standings).to.be(expectedValueLiteral);
      });

      it('should have the property allow_alliance_access (base name: "allow_alliance_access")', function() {
        // TODO: update the code to test the property allow_alliance_access
        expect(instance).to.have.property('allow_alliance_access');
        // expect(instance.allow_alliance_access).to.be(expectedValueLiteral);
      });

      it('should have the property bad_standing_tax_rate (base name: "bad_standing_tax_rate")', function() {
        // TODO: update the code to test the property bad_standing_tax_rate
        expect(instance).to.have.property('bad_standing_tax_rate');
        // expect(instance.bad_standing_tax_rate).to.be(expectedValueLiteral);
      });

      it('should have the property corporation_tax_rate (base name: "corporation_tax_rate")', function() {
        // TODO: update the code to test the property corporation_tax_rate
        expect(instance).to.have.property('corporation_tax_rate');
        // expect(instance.corporation_tax_rate).to.be(expectedValueLiteral);
      });

      it('should have the property excellent_standing_tax_rate (base name: "excellent_standing_tax_rate")', function() {
        // TODO: update the code to test the property excellent_standing_tax_rate
        expect(instance).to.have.property('excellent_standing_tax_rate');
        // expect(instance.excellent_standing_tax_rate).to.be(expectedValueLiteral);
      });

      it('should have the property good_standing_tax_rate (base name: "good_standing_tax_rate")', function() {
        // TODO: update the code to test the property good_standing_tax_rate
        expect(instance).to.have.property('good_standing_tax_rate');
        // expect(instance.good_standing_tax_rate).to.be(expectedValueLiteral);
      });

      it('should have the property neutral_standing_tax_rate (base name: "neutral_standing_tax_rate")', function() {
        // TODO: update the code to test the property neutral_standing_tax_rate
        expect(instance).to.have.property('neutral_standing_tax_rate');
        // expect(instance.neutral_standing_tax_rate).to.be(expectedValueLiteral);
      });

      it('should have the property office_id (base name: "office_id")', function() {
        // TODO: update the code to test the property office_id
        expect(instance).to.have.property('office_id');
        // expect(instance.office_id).to.be(expectedValueLiteral);
      });

      it('should have the property reinforce_exit_end (base name: "reinforce_exit_end")', function() {
        // TODO: update the code to test the property reinforce_exit_end
        expect(instance).to.have.property('reinforce_exit_end');
        // expect(instance.reinforce_exit_end).to.be(expectedValueLiteral);
      });

      it('should have the property reinforce_exit_start (base name: "reinforce_exit_start")', function() {
        // TODO: update the code to test the property reinforce_exit_start
        expect(instance).to.have.property('reinforce_exit_start');
        // expect(instance.reinforce_exit_start).to.be(expectedValueLiteral);
      });

      it('should have the property standing_level (base name: "standing_level")', function() {
        // TODO: update the code to test the property standing_level
        expect(instance).to.have.property('standing_level');
        // expect(instance.standing_level).to.be(expectedValueLiteral);
      });

      it('should have the property system_id (base name: "system_id")', function() {
        // TODO: update the code to test the property system_id
        expect(instance).to.have.property('system_id');
        // expect(instance.system_id).to.be(expectedValueLiteral);
      });

      it('should have the property terrible_standing_tax_rate (base name: "terrible_standing_tax_rate")', function() {
        // TODO: update the code to test the property terrible_standing_tax_rate
        expect(instance).to.have.property('terrible_standing_tax_rate');
        // expect(instance.terrible_standing_tax_rate).to.be(expectedValueLiteral);
      });

    });
  });

}));
