/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.12
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.28
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveApi);
  }
}(this, function(expect, EveApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetCorporationsCorporationIdContractsContractIdItems200Ok', function() {
      beforeEach(function() {
        instance = new EveApi.GetCorporationsCorporationIdContractsContractIdItems200Ok();
      });

      it('should create an instance of GetCorporationsCorporationIdContractsContractIdItems200Ok', function() {
        // TODO: update the code to test GetCorporationsCorporationIdContractsContractIdItems200Ok
        expect(instance).to.be.a(EveApi.GetCorporationsCorporationIdContractsContractIdItems200Ok);
      });

      it('should have the property is_included (base name: "is_included")', function() {
        // TODO: update the code to test the property is_included
        expect(instance).to.have.property('is_included');
        // expect(instance.is_included).to.be(expectedValueLiteral);
      });

      it('should have the property is_singleton (base name: "is_singleton")', function() {
        // TODO: update the code to test the property is_singleton
        expect(instance).to.have.property('is_singleton');
        // expect(instance.is_singleton).to.be(expectedValueLiteral);
      });

      it('should have the property quantity (base name: "quantity")', function() {
        // TODO: update the code to test the property quantity
        expect(instance).to.have.property('quantity');
        // expect(instance.quantity).to.be(expectedValueLiteral);
      });

      it('should have the property raw_quantity (base name: "raw_quantity")', function() {
        // TODO: update the code to test the property raw_quantity
        expect(instance).to.have.property('raw_quantity');
        // expect(instance.raw_quantity).to.be(expectedValueLiteral);
      });

      it('should have the property record_id (base name: "record_id")', function() {
        // TODO: update the code to test the property record_id
        expect(instance).to.have.property('record_id');
        // expect(instance.record_id).to.be(expectedValueLiteral);
      });

      it('should have the property type_id (base name: "type_id")', function() {
        // TODO: update the code to test the property type_id
        expect(instance).to.have.property('type_id');
        // expect(instance.type_id).to.be(expectedValueLiteral);
      });

    });
  });

}));
