/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.12
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.28
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveApi);
  }
}(this, function(expect, EveApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetUniverseGraphicsGraphicIdOk', function() {
      beforeEach(function() {
        instance = new EveApi.GetUniverseGraphicsGraphicIdOk();
      });

      it('should create an instance of GetUniverseGraphicsGraphicIdOk', function() {
        // TODO: update the code to test GetUniverseGraphicsGraphicIdOk
        expect(instance).to.be.a(EveApi.GetUniverseGraphicsGraphicIdOk);
      });

      it('should have the property collision_file (base name: "collision_file")', function() {
        // TODO: update the code to test the property collision_file
        expect(instance).to.have.property('collision_file');
        // expect(instance.collision_file).to.be(expectedValueLiteral);
      });

      it('should have the property graphic_file (base name: "graphic_file")', function() {
        // TODO: update the code to test the property graphic_file
        expect(instance).to.have.property('graphic_file');
        // expect(instance.graphic_file).to.be(expectedValueLiteral);
      });

      it('should have the property graphic_id (base name: "graphic_id")', function() {
        // TODO: update the code to test the property graphic_id
        expect(instance).to.have.property('graphic_id');
        // expect(instance.graphic_id).to.be(expectedValueLiteral);
      });

      it('should have the property icon_folder (base name: "icon_folder")', function() {
        // TODO: update the code to test the property icon_folder
        expect(instance).to.have.property('icon_folder');
        // expect(instance.icon_folder).to.be(expectedValueLiteral);
      });

      it('should have the property sof_dna (base name: "sof_dna")', function() {
        // TODO: update the code to test the property sof_dna
        expect(instance).to.have.property('sof_dna');
        // expect(instance.sof_dna).to.be(expectedValueLiteral);
      });

      it('should have the property sof_fation_name (base name: "sof_fation_name")', function() {
        // TODO: update the code to test the property sof_fation_name
        expect(instance).to.have.property('sof_fation_name');
        // expect(instance.sof_fation_name).to.be(expectedValueLiteral);
      });

      it('should have the property sof_hull_name (base name: "sof_hull_name")', function() {
        // TODO: update the code to test the property sof_hull_name
        expect(instance).to.have.property('sof_hull_name');
        // expect(instance.sof_hull_name).to.be(expectedValueLiteral);
      });

      it('should have the property sof_race_name (base name: "sof_race_name")', function() {
        // TODO: update the code to test the property sof_race_name
        expect(instance).to.have.property('sof_race_name');
        // expect(instance.sof_race_name).to.be(expectedValueLiteral);
      });

    });
  });

}));
