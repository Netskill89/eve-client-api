/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.12
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.28
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BadRequest', 'model/ErrorLimited', 'model/Forbidden', 'model/GatewayTimeout', 'model/GetCharactersCharacterIdPlanets200Ok', 'model/GetCharactersCharacterIdPlanetsPlanetIdNotFound', 'model/GetCharactersCharacterIdPlanetsPlanetIdOk', 'model/GetCorporationsCorporationIdCustomsOffices200Ok', 'model/GetUniverseSchematicsSchematicIdNotFound', 'model/GetUniverseSchematicsSchematicIdOk', 'model/InternalServerError', 'model/ServiceUnavailable', 'model/Unauthorized'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BadRequest'), require('../model/ErrorLimited'), require('../model/Forbidden'), require('../model/GatewayTimeout'), require('../model/GetCharactersCharacterIdPlanets200Ok'), require('../model/GetCharactersCharacterIdPlanetsPlanetIdNotFound'), require('../model/GetCharactersCharacterIdPlanetsPlanetIdOk'), require('../model/GetCorporationsCorporationIdCustomsOffices200Ok'), require('../model/GetUniverseSchematicsSchematicIdNotFound'), require('../model/GetUniverseSchematicsSchematicIdOk'), require('../model/InternalServerError'), require('../model/ServiceUnavailable'), require('../model/Unauthorized'));
  } else {
    // Browser globals (root is window)
    if (!root.EveApi) {
      root.EveApi = {};
    }
    root.EveApi.PlanetaryInteractionApi = factory(root.EveApi.ApiClient, root.EveApi.BadRequest, root.EveApi.ErrorLimited, root.EveApi.Forbidden, root.EveApi.GatewayTimeout, root.EveApi.GetCharactersCharacterIdPlanets200Ok, root.EveApi.GetCharactersCharacterIdPlanetsPlanetIdNotFound, root.EveApi.GetCharactersCharacterIdPlanetsPlanetIdOk, root.EveApi.GetCorporationsCorporationIdCustomsOffices200Ok, root.EveApi.GetUniverseSchematicsSchematicIdNotFound, root.EveApi.GetUniverseSchematicsSchematicIdOk, root.EveApi.InternalServerError, root.EveApi.ServiceUnavailable, root.EveApi.Unauthorized);
  }
}(this, function(ApiClient, BadRequest, ErrorLimited, Forbidden, GatewayTimeout, GetCharactersCharacterIdPlanets200Ok, GetCharactersCharacterIdPlanetsPlanetIdNotFound, GetCharactersCharacterIdPlanetsPlanetIdOk, GetCorporationsCorporationIdCustomsOffices200Ok, GetUniverseSchematicsSchematicIdNotFound, GetUniverseSchematicsSchematicIdOk, InternalServerError, ServiceUnavailable, Unauthorized) {
  'use strict';

  /**
   * PlanetaryInteraction service.
   * @module api/PlanetaryInteractionApi
   * @version 1.12
   */

  /**
   * Constructs a new PlanetaryInteractionApi. 
   * @alias module:api/PlanetaryInteractionApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getCharactersCharacterIdPlanets operation.
     * @callback module:api/PlanetaryInteractionApi~getCharactersCharacterIdPlanetsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCharactersCharacterIdPlanets200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get colonies
     * Returns a list of all planetary colonies owned by a character.  --- Alternate route: `/dev/characters/{character_id}/planets/`  Alternate route: `/legacy/characters/{character_id}/planets/`  Alternate route: `/v1/characters/{character_id}/planets/`  --- This route is cached for up to 600 seconds
     * @param {Number} character_id An EVE character ID
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {String} opts.If_None_Match ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {String} opts.token Access token to use if unable to set a header
     * @param {module:api/PlanetaryInteractionApi~getCharactersCharacterIdPlanetsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCharactersCharacterIdPlanets200Ok>}
     */
    this.getCharactersCharacterIdPlanets = function(character_id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'character_id' is set
      if (character_id === undefined || character_id === null) {
        throw new Error("Missing the required parameter 'character_id' when calling getCharactersCharacterIdPlanets");
      }


      var pathParams = {
        'character_id': character_id
      };
      var queryParams = {
        'datasource': opts['datasource'],
        'token': opts['token'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'If-None-Match': opts['If_None_Match']
      };
      var formParams = {
      };

      var authNames = ['evesso'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [GetCharactersCharacterIdPlanets200Ok];

      return this.apiClient.callApi(
        '/characters/{character_id}/planets/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getCharactersCharacterIdPlanetsPlanetId operation.
     * @callback module:api/PlanetaryInteractionApi~getCharactersCharacterIdPlanetsPlanetIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCharactersCharacterIdPlanetsPlanetIdOk} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get colony layout
     * Returns full details on the layout of a single planetary colony, including links, pins and routes. Note: Planetary information is only recalculated when the colony is viewed through the client. Information will not update until this criteria is met.  --- Alternate route: `/dev/characters/{character_id}/planets/{planet_id}/`  Alternate route: `/v3/characters/{character_id}/planets/{planet_id}/` 
     * @param {Number} character_id An EVE character ID
     * @param {Number} planet_id Planet id of the target planet
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {String} opts.token Access token to use if unable to set a header
     * @param {module:api/PlanetaryInteractionApi~getCharactersCharacterIdPlanetsPlanetIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCharactersCharacterIdPlanetsPlanetIdOk}
     */
    this.getCharactersCharacterIdPlanetsPlanetId = function(character_id, planet_id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'character_id' is set
      if (character_id === undefined || character_id === null) {
        throw new Error("Missing the required parameter 'character_id' when calling getCharactersCharacterIdPlanetsPlanetId");
      }

      // verify the required parameter 'planet_id' is set
      if (planet_id === undefined || planet_id === null) {
        throw new Error("Missing the required parameter 'planet_id' when calling getCharactersCharacterIdPlanetsPlanetId");
      }


      var pathParams = {
        'character_id': character_id,
        'planet_id': planet_id
      };
      var queryParams = {
        'datasource': opts['datasource'],
        'token': opts['token'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['evesso'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = GetCharactersCharacterIdPlanetsPlanetIdOk;

      return this.apiClient.callApi(
        '/characters/{character_id}/planets/{planet_id}/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getCorporationsCorporationIdCustomsOffices operation.
     * @callback module:api/PlanetaryInteractionApi~getCorporationsCorporationIdCustomsOfficesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCorporationsCorporationIdCustomsOffices200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List corporation customs offices
     * List customs offices owned by a corporation  --- Alternate route: `/dev/corporations/{corporation_id}/customs_offices/`  Alternate route: `/legacy/corporations/{corporation_id}/customs_offices/`  Alternate route: `/v1/corporations/{corporation_id}/customs_offices/`  --- This route is cached for up to 3600 seconds  --- Requires one of the following EVE corporation role(s): Director 
     * @param {Number} corporation_id An EVE corporation ID
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {String} opts.If_None_Match ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {Number} opts.page Which page of results to return (default to 1)
     * @param {String} opts.token Access token to use if unable to set a header
     * @param {module:api/PlanetaryInteractionApi~getCorporationsCorporationIdCustomsOfficesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCorporationsCorporationIdCustomsOffices200Ok>}
     */
    this.getCorporationsCorporationIdCustomsOffices = function(corporation_id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'corporation_id' is set
      if (corporation_id === undefined || corporation_id === null) {
        throw new Error("Missing the required parameter 'corporation_id' when calling getCorporationsCorporationIdCustomsOffices");
      }


      var pathParams = {
        'corporation_id': corporation_id
      };
      var queryParams = {
        'datasource': opts['datasource'],
        'page': opts['page'],
        'token': opts['token'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'If-None-Match': opts['If_None_Match']
      };
      var formParams = {
      };

      var authNames = ['evesso'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [GetCorporationsCorporationIdCustomsOffices200Ok];

      return this.apiClient.callApi(
        '/corporations/{corporation_id}/customs_offices/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getUniverseSchematicsSchematicId operation.
     * @callback module:api/PlanetaryInteractionApi~getUniverseSchematicsSchematicIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetUniverseSchematicsSchematicIdOk} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get schematic information
     * Get information on a planetary factory schematic  --- Alternate route: `/dev/universe/schematics/{schematic_id}/`  Alternate route: `/legacy/universe/schematics/{schematic_id}/`  Alternate route: `/v1/universe/schematics/{schematic_id}/`  --- This route is cached for up to 3600 seconds
     * @param {Number} schematic_id A PI schematic ID
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {String} opts.If_None_Match ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {module:api/PlanetaryInteractionApi~getUniverseSchematicsSchematicIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetUniverseSchematicsSchematicIdOk}
     */
    this.getUniverseSchematicsSchematicId = function(schematic_id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'schematic_id' is set
      if (schematic_id === undefined || schematic_id === null) {
        throw new Error("Missing the required parameter 'schematic_id' when calling getUniverseSchematicsSchematicId");
      }


      var pathParams = {
        'schematic_id': schematic_id
      };
      var queryParams = {
        'datasource': opts['datasource'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'If-None-Match': opts['If_None_Match']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = GetUniverseSchematicsSchematicIdOk;

      return this.apiClient.callApi(
        '/universe/schematics/{schematic_id}/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
