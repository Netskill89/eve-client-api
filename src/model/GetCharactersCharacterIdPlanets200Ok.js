/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.12
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.28
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.EveApi) {
      root.EveApi = {};
    }
    root.EveApi.GetCharactersCharacterIdPlanets200Ok = factory(root.EveApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The GetCharactersCharacterIdPlanets200Ok model module.
   * @module model/GetCharactersCharacterIdPlanets200Ok
   * @version 1.12
   */

  /**
   * Constructs a new <code>GetCharactersCharacterIdPlanets200Ok</code>.
   * 200 ok object
   * @alias module:model/GetCharactersCharacterIdPlanets200Ok
   * @class
   * @param last_update {Date} last_update string
   * @param num_pins {Number} num_pins integer
   * @param owner_id {Number} owner_id integer
   * @param planet_id {Number} planet_id integer
   * @param planet_type {module:model/GetCharactersCharacterIdPlanets200Ok.PlanetTypeEnum} planet_type string
   * @param solar_system_id {Number} solar_system_id integer
   * @param upgrade_level {Number} upgrade_level integer
   */
  var exports = function(last_update, num_pins, owner_id, planet_id, planet_type, solar_system_id, upgrade_level) {
    this.last_update = last_update;
    this.num_pins = num_pins;
    this.owner_id = owner_id;
    this.planet_id = planet_id;
    this.planet_type = planet_type;
    this.solar_system_id = solar_system_id;
    this.upgrade_level = upgrade_level;
  };

  /**
   * Constructs a <code>GetCharactersCharacterIdPlanets200Ok</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetCharactersCharacterIdPlanets200Ok} obj Optional instance to populate.
   * @return {module:model/GetCharactersCharacterIdPlanets200Ok} The populated <code>GetCharactersCharacterIdPlanets200Ok</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('last_update'))
        obj.last_update = ApiClient.convertToType(data['last_update'], 'Date');
      if (data.hasOwnProperty('num_pins'))
        obj.num_pins = ApiClient.convertToType(data['num_pins'], 'Number');
      if (data.hasOwnProperty('owner_id'))
        obj.owner_id = ApiClient.convertToType(data['owner_id'], 'Number');
      if (data.hasOwnProperty('planet_id'))
        obj.planet_id = ApiClient.convertToType(data['planet_id'], 'Number');
      if (data.hasOwnProperty('planet_type'))
        obj.planet_type = ApiClient.convertToType(data['planet_type'], 'String');
      if (data.hasOwnProperty('solar_system_id'))
        obj.solar_system_id = ApiClient.convertToType(data['solar_system_id'], 'Number');
      if (data.hasOwnProperty('upgrade_level'))
        obj.upgrade_level = ApiClient.convertToType(data['upgrade_level'], 'Number');
    }
    return obj;
  }

  /**
   * last_update string
   * @member {Date} last_update
   */
  exports.prototype.last_update = undefined;

  /**
   * num_pins integer
   * @member {Number} num_pins
   */
  exports.prototype.num_pins = undefined;

  /**
   * owner_id integer
   * @member {Number} owner_id
   */
  exports.prototype.owner_id = undefined;

  /**
   * planet_id integer
   * @member {Number} planet_id
   */
  exports.prototype.planet_id = undefined;

  /**
   * planet_type string
   * @member {module:model/GetCharactersCharacterIdPlanets200Ok.PlanetTypeEnum} planet_type
   */
  exports.prototype.planet_type = undefined;

  /**
   * solar_system_id integer
   * @member {Number} solar_system_id
   */
  exports.prototype.solar_system_id = undefined;

  /**
   * upgrade_level integer
   * @member {Number} upgrade_level
   */
  exports.prototype.upgrade_level = undefined;



  /**
   * Allowed values for the <code>planet_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PlanetTypeEnum = {
    /**
     * value: "temperate"
     * @const
     */
    temperate: "temperate",

    /**
     * value: "barren"
     * @const
     */
    barren: "barren",

    /**
     * value: "oceanic"
     * @const
     */
    oceanic: "oceanic",

    /**
     * value: "ice"
     * @const
     */
    ice: "ice",

    /**
     * value: "gas"
     * @const
     */
    gas: "gas",

    /**
     * value: "lava"
     * @const
     */
    lava: "lava",

    /**
     * value: "storm"
     * @const
     */
    storm: "storm",

    /**
     * value: "plasma"
     * @const
     */
    plasma: "plasma"
  };

  return exports;

}));
