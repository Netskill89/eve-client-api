/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.12
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.28
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.EveApi) {
      root.EveApi = {};
    }
    root.EveApi.GetCorporationsCorporationIdContacts200Ok = factory(root.EveApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The GetCorporationsCorporationIdContacts200Ok model module.
   * @module model/GetCorporationsCorporationIdContacts200Ok
   * @version 1.12
   */

  /**
   * Constructs a new <code>GetCorporationsCorporationIdContacts200Ok</code>.
   * 200 ok object
   * @alias module:model/GetCorporationsCorporationIdContacts200Ok
   * @class
   * @param contact_id {Number} contact_id integer
   * @param contact_type {module:model/GetCorporationsCorporationIdContacts200Ok.ContactTypeEnum} contact_type string
   * @param standing {Number} Standing of the contact
   */
  var exports = function(contact_id, contact_type, standing) {
    this.contact_id = contact_id;
    this.contact_type = contact_type;
    this.standing = standing;
  };

  /**
   * Constructs a <code>GetCorporationsCorporationIdContacts200Ok</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetCorporationsCorporationIdContacts200Ok} obj Optional instance to populate.
   * @return {module:model/GetCorporationsCorporationIdContacts200Ok} The populated <code>GetCorporationsCorporationIdContacts200Ok</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('contact_id'))
        obj.contact_id = ApiClient.convertToType(data['contact_id'], 'Number');
      if (data.hasOwnProperty('contact_type'))
        obj.contact_type = ApiClient.convertToType(data['contact_type'], 'String');
      if (data.hasOwnProperty('is_watched'))
        obj.is_watched = ApiClient.convertToType(data['is_watched'], 'Boolean');
      if (data.hasOwnProperty('label_ids'))
        obj.label_ids = ApiClient.convertToType(data['label_ids'], ['Number']);
      if (data.hasOwnProperty('standing'))
        obj.standing = ApiClient.convertToType(data['standing'], 'Number');
    }
    return obj;
  }

  /**
   * contact_id integer
   * @member {Number} contact_id
   */
  exports.prototype.contact_id = undefined;

  /**
   * contact_type string
   * @member {module:model/GetCorporationsCorporationIdContacts200Ok.ContactTypeEnum} contact_type
   */
  exports.prototype.contact_type = undefined;

  /**
   * Whether this contact is being watched
   * @member {Boolean} is_watched
   */
  exports.prototype.is_watched = undefined;

  /**
   * label_ids array
   * @member {Array.<Number>} label_ids
   */
  exports.prototype.label_ids = undefined;

  /**
   * Standing of the contact
   * @member {Number} standing
   */
  exports.prototype.standing = undefined;



  /**
   * Allowed values for the <code>contact_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ContactTypeEnum = {
    /**
     * value: "character"
     * @const
     */
    character: "character",

    /**
     * value: "corporation"
     * @const
     */
    corporation: "corporation",

    /**
     * value: "alliance"
     * @const
     */
    alliance: "alliance",

    /**
     * value: "faction"
     * @const
     */
    faction: "faction"
  };

  return exports;

}));
